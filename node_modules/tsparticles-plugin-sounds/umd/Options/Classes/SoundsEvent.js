(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./SoundsAudio", "./SoundsMelody", "./SoundsNote"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SoundsEvent = void 0;
    const SoundsAudio_1 = require("./SoundsAudio");
    const SoundsMelody_1 = require("./SoundsMelody");
    const SoundsNote_1 = require("./SoundsNote");
    class SoundsEvent {
        constructor() {
            this.event = [];
            this.notes = [];
        }
        load(data) {
            if (!data) {
                return;
            }
            if (data.event !== undefined) {
                this.event = data.event;
            }
            if (data.audio !== undefined) {
                if (data.audio instanceof Array) {
                    this.audio = data.audio.map((s) => {
                        const tmp = new SoundsAudio_1.SoundsAudio();
                        tmp.load(s);
                        return tmp;
                    });
                }
                else {
                    this.audio = new SoundsAudio_1.SoundsAudio();
                    this.audio.load(data.audio);
                }
            }
            if (data.notes !== undefined) {
                this.notes = data.notes.map((t) => {
                    const tmp = new SoundsNote_1.SoundsNote();
                    tmp.load(t);
                    return tmp;
                });
            }
            if (data.melodies !== undefined) {
                this.melodies = data.melodies.map((t) => {
                    const tmp = new SoundsMelody_1.SoundsMelody();
                    tmp.load(t);
                    return tmp;
                });
            }
            if (data.filter !== undefined) {
                if (typeof data.filter === "string") {
                    if (typeof window[data.filter] === "function") {
                        this.filter = window[data.filter];
                    }
                }
                else {
                    this.filter = data.filter;
                }
            }
        }
    }
    exports.SoundsEvent = SoundsEvent;
});
