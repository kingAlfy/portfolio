import { type Container, type RecursivePartial } from "tsparticles-engine";
import type { IFireworkOptions } from "./IFireworkOptions";
declare global {
    interface Window {
        fireworks: ((idOrOptions: string | RecursivePartial<IFireworkOptions>, sourceOptions?: RecursivePartial<IFireworkOptions>) => Promise<FireworksInstance | undefined>) & {
            version: string;
        };
    }
}
declare class FireworksInstance {
    private readonly _container;
    constructor(container: Container);
    pause(): void;
    play(): void;
    stop(): void;
}
export declare function fireworks(idOrOptions: string | RecursivePartial<IFireworkOptions>, sourceOptions?: RecursivePartial<IFireworkOptions>): Promise<FireworksInstance | undefined>;
export declare namespace fireworks {
    var version: string;
}
export {};
